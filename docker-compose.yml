version: '3.7'

services:

  optimizer:
    build:
      context: services/optimizer
      dockerfile: Dockerfile
    volumes:
      - './results:/usr/src/af-opt/results'
      - 'runfile_folder:/usr/src/af-opt/shared'
    environment:
      - SMTP_SETTINGS=/run/secrets/smtp_settings.cfg
      - RESULTS_DIR=/usr/src/af-opt/results
      - RUNFILE=shared/Runfile
    secrets:
      - smtp_settings.cfg

  nudger:
    build:
      context: services/nudger
      dockerfile: Dockerfile
    volumes:
      - 'runfile_folder:/root/shared'
    environment:
      - RUNFILE=shared/Runfile

  runs:
    build:
      context: ./services/runs
      dockerfile: Dockerfile
    volumes:
      #      - 'runfile_folder:/usr/src/app/shared'
      - './services/runs:/usr/src/app'
    ports:
      - 5000
    environment:
      #      - RUNFILE=shared/Runfile
      - FLASK_ENV=development
      - APP_SETTINGS=project.config.DevelopmentConfig
      - DATABASE_URL=postgres://postgres:postgres@runs-db:5432/runs_dev
      - DATABASE_TEST_URL=postgres://postgres:postgres@runs-db:5432/runs_test
    depends_on:
      - runs-db

  runs-db:
    build:
      context: ./services/runs/project/db
      dockerfile: Dockerfile
    ports:
      - 5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres

  nginx:
    build:
      context: ./services/nginx
      dockerfile: Dockerfile
    restart: always
    ports:
      - 80:80
    depends_on:
      - runs
      - client

  client:
    build:
      context: ./services/client
      dockerfile: Dockerfile
    volumes:
      - './services/client:/usr/src/app'
      - '/usr/src/app/node_modules'
    ports:
      - 3007:3000
    environment:
      - NODE_ENV=development
      - REACT_APP_RUNS_SERVICE_URL=http://localhost
    depends_on:
      - runs

secrets:
  smtp_settings.cfg:
    file: ./services/optimizer/smtp_settings.cfg

volumes:
  runfile_folder: